{"version":3,"sources":["components/ButtonCopy/index.js","components/PokemonImage/index.js","components/PokeCardList/index.js","components/PokeGrid/index.js","components/Footer/index.js","components/ScrollToTop/index.js","containers/Main/index.js","App/_Routes/index.js","App/index.js","index.js"],"names":["ButtonCopy","region","index","key","text","ButtonBase","onClick","toast","success","PokemonImage","id","placeholder","image","renderComponent","src","className","alt","renderLoading","ButtonDisabled","styled","PokeCardList","pokedex","shiny","name","toUpperCase","nest","pokemon","map","coord","toLowerCase","coordinates","includes","disabled","PokeGrid","hasfilter","select","shinies","disponible","useState","setPokemon","loading","setLoading","axios","get","then","response","results","data","catch","error","hasSelect","filter","pokes","indexOf","String","useEffect","length","filtro","poke","Container","fluid","filterPoke","Spinner","as","animation","role","aria-hidden","Footer","href","ScrollToTop","OverlayTrigger","overlay","Tooltip","window","scrollTo","document","getElementById","offsetTop","memo","setFilter","setSelect","setShinies","setDisponible","scroll","setScroll","number","setNumber","onscroll","oEvent","el","pageYOffset","icons","pokeball","onKeyPress","click","handleClick","type","onChange","event","target","value","local","option","Col","Row","icon","url","date","moment","renderer","days","hours","minutes","seconds","completed","Routes","fallback","exact","path","component","Main","from","to","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b0d8837b.chunk.js","sourcesContent":["import React from 'react';\nimport { ButtonBase} from '@material-ui/core';\nimport { toast } from 'react-toastify';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nfunction ButtonCopy({region, index}) {\n  return (\n    <CopyToClipboard key={index}text={region}>\n    <ButtonBase onClick={() => toast.success('Copiado')}>\n      Opção {index+1}\n    </ButtonBase>\n  </CopyToClipboard>\n  );\n}\n\nexport default ButtonCopy;","import React from 'react';\nimport ImageLoader from \"rc-image-loader\";\nimport './styles.scss';\n\nfunction PokemonImage({id}) {\n\n\n  return (\n    <div>\n    <ImageLoader \n        placeholder={'https://cdn.bulbagarden.net/upload/7/79/Dream_Pok%C3%A9_Ball_Sprite.png'}\n        image={`https://cdn.traction.one/pokedex/pokemon/${id}.png`} \n        renderComponent={({ src }) => (<img className=\"animated\"src={src} alt=\"pokebola\" />)}\n        renderLoading={({ src }) => (<img src={src} alt=\"pokemon\" />)}\n    >\n      {({ src }) => (<img src={src} alt=\"pokemon\" />)}\n    </ImageLoader>\n  </div>\n  );\n}\n\nexport default PokemonImage;","import React from 'react';\nimport { ButtonBase} from '@material-ui/core';\nimport ButtonCopy from '../ButtonCopy';\nimport PokemonImage from '../PokemonImage';\nimport styled from 'styled-components';\nimport nest from '../../services/nest.json'\nimport './styles.scss';\n\nconst ButtonDisabled = styled(ButtonBase)`\n          margin-top: 4px;\n          height: 22px;\n          width: 100%;\n          position: relative;\n          font: 10px/14px Quicksand-Bold !important;\n          background-color: #ccc !important;\n          color: #000 !important;\n          border: 1px #000 solid !important;\n          border-radius: 10px;\n          box-shadow: 0px 3px 6px #00000029;\n`;\n\nexport default function PokeCardList({ pokedex, id, shiny }) {\n\n    \n  return ( \n          <>\n            <div\n            key={pokedex.name}\n            className=\"grid-items\"\n          >\n                <div className=\"grid-box\">\n                {/*<img src={`https://cdn.traction.one/pokedex/pokemon/${id}.png`} alt={pokedex.name}  />*/}\n                <PokemonImage id={id} />\n                  <strong className=\"wrap\">nº{id} <br/> {pokedex.name.toUpperCase()}{shiny === \"true\"?(\"✨\"):(false)}</strong>\n                {nest.pokemon.map((coord) => coord.name.toLowerCase() === pokedex.name\n                ?(\n                  <>\n                    {coord.coordinates.map((region, index) => !region.includes(\"nothing\")\n                       ?(\n                        <ButtonCopy \n                          key={region} \n                          region={region} \n                          index={index}\n                        />\n                       )\n                       :(\n                        <ButtonDisabled disabled>\n                          Ninho não encontrado\n                        </ButtonDisabled>\n                       )\n                    )}\n                  </>\n                )\n                :(false)\n                )}\n              </div>\n\n          </div>\n\n          </>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport PokeCardList from '../PokeCardList';\nimport { Container, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport nest from '../../services/nest.json'\n\nfunction PokeGrid({hasfilter, select, shinies, disponible}){\n    const [pokemon, setPokemon] = useState([])\n    const [loading, setLoading] = useState(true);\n\n    const pokedex = () =>{\n        axios\n        .get(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=649`)\n        .then(function (response) {\n          const { data } = response;\n          const {results} = data\n          return setPokemon(results);\n        })\n        .catch(function (error) {\n          setPokemon(false);\n        });  \n    }\n\n       \n        const hasSelect = nest.pokemon\n        .filter((pokes) => pokes.region.toLowerCase().indexOf(String(select.toLowerCase())) > -1)\n        .filter((pokes) => pokes.shiny.toLowerCase().indexOf(String(shinies.toLowerCase())) > -1)\n        .filter((pokes) => pokes.coordinates.filter((coord) => coord === disponible) > -1)\n        \n        \n      \n    \n    useEffect(() => {\n        setLoading(false)\n        pokedex()\n        if(pokemon.length > 0){\n          setLoading(true)\n        } else {\n          setLoading(false)\n        }\n    }, [pokedex, pokemon]);\n\n    \n    const filtro = pokemon\n    .filter((poke) => poke.name.toLowerCase().indexOf(String(hasfilter.toLowerCase())) > -1)\n    \n    \n  return (\n    <div className=\"city\">\n    <Container fluid>\n    {loading \n    ? (\n      <>\n        {filtro.length > 0\n        ?(\n        <div className=\"grid-container\">\n          {filtro.map((pokedex, index) => \n          hasSelect.map((filterPoke) => \n          pokedex.name.toLowerCase() === String(filterPoke.name).toLowerCase() \n            ?(\n              <div key={index}>\n                  <PokeCardList\n                  pokedex={pokedex}\n                  index={index}\n                  id={filterPoke.id}\n                  shiny={filterPoke.shiny}\n                  />\n              </div>\n            )\n            :(false)\n          ))}\n        </div>\n      )\n        :(\n          <div className=\"grid-container\">\n            {pokemon.map((pokedex, index) => \n            nest.pokemon.map((filterPoke) => \n            pokedex.name.toLowerCase() === \n            String(filterPoke.name).toLowerCase()\n              ?(\n                  <PokeCardList\n                  pokedex={pokedex}\n                  index={index}\n                  id={filterPoke.id}\n                  shiny={filterPoke.shiny}\n                  />\n              )\n              :(false)\n            ))}\n        </div>\n        )\n        }\n      </>\n    )\n    :(\n      <div className=\"justify-content text-center\">\n            <Spinner\n              className=\"spinner-loading\"\n              as=\"span\"\n              animation=\"border\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n      </div>\n    )}\n    </Container>\n  </div>\n  );\n}\n\nexport default PokeGrid","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './styles.scss';\n\nfunction Footer() {\n  return (\n    <Container fluid className=\"footer\">\n    <div>\n     Desenvolvido por: <a href=\"http://github.com/engcfraposo\">@engcfraposo</a>\n    </div>\n    </Container>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport './styles.scss';\n\n\nfunction ScrollToTop() {\n \n  const scrollToDotLine = () => window.scrollTo(0, document.getElementById('search')?.offsetTop || 0);\n\n  return (\n    <OverlayTrigger overlay={<Tooltip id=\"tooltip\">Voltar ao topo</Tooltip>}>\n      <div\n        className={'scroll-to-top'}\n        id=\"scroll-to-top\"\n        onClick={scrollToDotLine}\n      >\n        <i className={'icon fas fa-chevron-up'} />\n      </div>\n    </OverlayTrigger>\n  );\n};\n\nexport default ScrollToTop;\n","import React, { useState, memo } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport moment from 'moment';\nimport Countdown from \"react-countdown\";\nimport './styles.scss';\nimport PokeGrid from '../../components/PokeGrid';\nimport Footer from '../../components/Footer';\nimport ScrollToTop from '../../components/ScrollToTop';\nimport region from '../../services/region.json';\nimport icons from '../../services/icons.json';\n\nfunction Main() {\n    const [filter, setFilter] = useState('');\n    const [select, setSelect] = useState('');\n    const [shinies, setShinies] = useState(\"\")\n    const [disponible, setDisponible] = useState(\"nothing\")\n    const [scroll, setScroll] = useState();\n    const [number, setNumber] = useState(0);\n\n    window.onscroll = (oEvent) => {\n        const el = document.getElementById('search');\n    \n        if (el) {\n          // eslint-disable-next-line no-unused-expressions\n          if (el.offsetTop + 45 < window.pageYOffset) {\n            setScroll(true);\n            if (number > window.pageYOffset) {\n              setScroll(false);\n            }\n          } else {\n            setNumber(window.pageYOffset);\n            setScroll(false);\n          }\n        }\n      };\n\n      function handleClick() {\n        const click = document.getElementById('list');\n    \n        if (click) {\n          // eslint-disable-next-line no-unused-expressions\n          window.scroll(0, click.offsetTop);\n        }\n      }\n      \n      const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n          // Render a complete state\n          return (\n           <p className=\"clean\">\n              0 dias, 0 Horas, 0 Minutos, 0 Segundos.\n            </p>\n          );\n        } else {\n          // Render a countdown\n          return (\n           <p className=\"clean\">\n              {days} dias, {hours} Horas, {minutes} Minutos, {seconds} Segundos.\n            </p>\n          );\n        }\n      };\n\n  return (\n      <>\n    <div className=\"main\">\n    <div className=\"main-first\">\n      <div className={`ajuste${scroll === true ? ' full' : ''}`}>\n        <img src={icons.pokeball} alt=\"Logo\" className=\"logo-pokemon\" />\n        <input\n          onKeyPress={() => handleClick()}\n          placeholder=\"Buscar por pokemon\"\n          type=\"text\"\n          onChange={(event) => setFilter(event.target.value)}\n          value={filter}\n          id=\"search\"\n        />\n      {!scroll?(\n        <>\n        <select onChange={(event) => setSelect(event.target.value)}>\n                <option value=\"\">\n                  Regiões\n                </option>\n                {region.local.map((option) => (\n                  <option key={option.region} value={option.region}>\n                    {option.region}\n                  </option>\n                ))}\n          </select>\n          <select onChange={(event) => setShinies(event.target.value)}>\n                <option value={\"true\"}>\n                  Só Shinies\n                </option>\n                  <option value={\"\"}>\n                    Todos\n                  </option>\n          </select>\n          <select onChange={(event) => setDisponible(event.target.value)}>\n              <option value={\"nothing\"}>\n                Disponiveis\n              </option>\n                <option value={\"\"}>\n                  Todos\n                </option>\n        </select>\n        </>\n      ):(\n        <div>\n      <select onChange={(event) => setSelect(event.target.value)}>\n              <option value=\"\">\n                Regiões\n              </option>\n              {region.local.map((option) => (\n                <option key={option.region} value={option.region}>\n                  {option.region}\n                </option>\n              ))}\n        </select>\n        <select onChange={(event) => setShinies(event.target.value)}>\n              <option value={\"true\"}>\n                Só Shinies\n              </option>\n                <option value={\"\"}>\n                  Todos\n                </option>\n        </select>\n         <select onChange={(event) => setDisponible(event.target.value)}>\n              <option value={\"nothing\"}>\n                Disponiveis\n              </option>\n                <option value={\"\"}>\n                  Todos\n                </option>\n        </select>\n      </div>\n      )}\n      \n      </div>  \n    </div>\n    {!scroll\n          ?(\n            <div className=\"main-last\">\n        <Col className=\"text-center\">\n          <Row className=\"default\">\n            {icons.pokemon.map((icon, index)=>(\n              <img key={index} src={icon.url} alt={icon.url}/>\n            ))}\n          </Row>\n          <Row className=\"default\">\n            <p className=\"clean\">Ninhos de Pokemon GO</p>\n          </Row>\n            <Row className=\"default\">\n            <p>Veja todos os Pokemons e seus ninhos </p>\n          </Row>\n            <Row className=\"default\">\n            <p className=\"clean\">\n              É muito simples! Basta clicar em um dos botões de opção que irá copiar\n              as coordenadas.\n            </p>\n          </Row>\n          <Row className=\"default\">\n            {icons.pokemon.map((icon, index)=>(\n              <img key={index} src={icon.url} alt={icon.url}/>\n            ))}\n          </Row>\n        </Col>\n      </div>\n          )\n          :(\n            <div className=\"main-last\" id=\"main-last\">\n        <Col className=\"text-center\">\n          <Row className=\"default\">\n            {icons.pokemon.map((icon, index)=>(\n              <img key={index} src={icon.url} alt={icon.url}/>\n            ))}\n          </Row>\n          <Row className=\"default\">\n            <p className=\"clean\">Ninhos de Pokemon GO</p>\n          </Row>\n            <Row className=\"default\">\n            <p>Proxima migração de ninho</p>\n          </Row>\n            <Row className=\"default\">\n            <Countdown date={moment('15/10/2020 23:59:59', 'DD/MM/YYYY hh:mm:ss')} renderer={renderer} />\n          </Row>\n          <Row className=\"default\">\n          {icons.pokemon.map((icon, index)=>(\n              <img key={index} src={icon.url} alt={icon.url}/>\n            ))}\n          </Row>\n        </Col>\n      </div>\n          )}\n      <div className={scroll === true ? ' city city-scroll' : 'city'} id=\"city\">\n      <PokeGrid \n        hasfilter={filter}\n        select={select}\n        shinies={shinies}\n        disponible={disponible}  \n        />\n      <Footer />\n      {scroll?(<ScrollToTop />):(false)}\n      </div>\n  </div>\n</>\n  );\n}\n\nexport default memo(Main);\n\n","import React, {Suspense} from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport Main from '../../containers/Main'\n\nexport default function Routes() {\n  return (\n    <Switch>\n        <Suspense fallback={\n          <div className=\"justify-content text-center\">\n            <Spinner\n              className=\"spinner-loading\"\n              as=\"span\"\n              animation=\"border\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        }>\n          <Route exact path=\"/\" component={Main} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Suspense>\n    </Switch>\n  );\n}\n\n","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Routes from './_Routes';\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"App\">\n      <Switch>\n        <Routes />\n      </Switch>\n      <ToastContainer />\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './css/fontawesome.min.css';\nimport './css/all.min.css';\nimport './common.scss';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n//import 'slick-carousel/slick/slick.css';\n//import 'slick-carousel/slick/slick-theme.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}